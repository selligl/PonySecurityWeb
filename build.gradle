buildscript {
	ext {
		springBootVersion = '1.5.6.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath('org.hidetake:gradle-ssh-plugin:+')
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'org.hidetake.ssh'


version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}


dependencies {
    compile("org.springframework.boot:spring-boot-starter-web")
    compile('com.google.code.gson:gson:2+')
    compile('org.apache.httpcomponents:httpclient:4+')
    compile('org.bitbucket.b_c:jose4j:0.6+')
	testCompile('org.springframework.boot:spring-boot-starter-test')
}


ssh.settings {
    dryRun = project.hasProperty('dryRun')
}

/*
/// *** Packaging *** ///

def distributionsCopySpec = copySpec {
    into("ponysecurity") {
        into('lib') {
            from(jar)
            from(project.configurations.runtime)
            exclude 'spring-boot-devtools-*'
        }
        into('config') {
            from 'sample-config'
        }
    }
}

task releaseZip(type: Zip, dependsOn: ['clean', 'jar']) {
    description 'Build a release in zip format'
    with distributionsCopySpec
    archiveName = "ponysecurity.zip"
}

task releaseTarGz(type: Tar, dependsOn: ['clean', 'jar']) {
    description 'Build a release in tar.gz format'
    compression = Compression.GZIP
    with distributionsCopySpec
    archiveName = "ponysecurity.tar.gz"
}*/


jar {
    exclude('**/application.yml')
}

apply from: 'ssh.gradle'
